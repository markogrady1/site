{"version":3,"sources":["components/Header/index.js","components/Home/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","click","setClick","closeMobileMenu","useEffect","className","to","onClick","Main","routes","component","Home","path","App","map","route","index","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAkFeA,MA7Ef,WAAmB,IAAD,EACUC,oBAAS,GADnB,mBACTC,EADS,KACFC,EADE,KAKVC,EAAkB,kBAAMD,GAAS,IAgBvC,OANAE,qBAAU,cAEP,IAKD,mCACE,qBAAKC,UAAU,SAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,eAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAcE,QAASJ,EAA9C,wBAEE,mBAAGE,UAAU,qBAEf,qBAAKA,UAAU,YAAYE,QAzBf,kBAAML,GAAUD,IAyB5B,SACE,mBAAGI,UAAWJ,EAAQ,eAAiB,kBAEzC,qBAAII,UAAWJ,EAAQ,kBAAoB,WAA3C,UACE,oBAAII,UAAU,WAAd,SACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YAAYE,QAASJ,EAA5C,oBAIF,oBAAIE,UAAU,WAAd,SACE,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,YAAYE,QAASJ,EAApD,wBAIF,oBAAIE,UAAU,WAAd,SACE,cAAC,IAAD,CACEC,GAAG,QACHD,UAAU,YACVE,QAASJ,EAHX,oBAQF,oBAAIE,UAAU,WAAd,SACE,cAAC,IAAD,CACEC,GAAG,SACHD,UAAU,YACVE,QAASJ,EAHX,qBAQF,oBAAIE,UAAU,WAAd,SACE,cAAC,IAAD,CACEC,GAAG,aACHD,UAAU,YACVE,QAASJ,EAHX,oCCvDCK,MATf,WACE,OACE,sBAAKH,UAAU,iBAAf,UACE,iDACA,iD,OCKAI,G,MAAS,CACb,CAAEC,UAAWC,EAAMC,KAAM,OAyBZC,MAjBf,WAGE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACGJ,EAAOK,KAAI,SAACC,EAAOC,GAClB,OAAO,cAAC,IAAD,CAAmBJ,KAAMG,EAAMH,KAAMK,OAAK,EAACP,UAAWK,EAAML,WAAhDM,cClBhBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.979ca20b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import { Button } from '../Button';\nimport { Link } from 'react-router-dom';\nimport './style.css';\n\nfunction Header() {\n  const [click, setClick] = useState(false);\n  // const [button, setButton] = useState(true);\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n\n  // const showButton = () => {\n  //   if (window.innerWidth <= 960) {\n  //     setButton(false);\n  //   } else {\n  //     setButton(true);\n  //   }\n  // };\n\n  useEffect(() => {\n    // showButton();\n  }, []);\n\n  // window.addEventListener('resize', showButton);\n\n  return (\n    <>\n      <nav className='navbar'>\n        <div className='navbar-container'>\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n            BEEPBOP&nbsp;\n            <i className='fas fa-adjust' />\n          </Link>\n          <div className='menu-icon' onClick={handleClick}>\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n          </div>\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n            <li className='nav-item'>\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                Home\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link to='/projects' className='nav-links' onClick={closeMobileMenu}>\n                Projects\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/blog'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                Blog\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/notes'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                Notes\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/bookmarks'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                Bookmarks\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Header;\n","import React from 'react'\n// import '../../App.css';\n\nfunction Main() {\n  return (\n    <div className='body-container'>\n      <h1>Beep to the Bop</h1>\n      <p>I am a robot</p>\n    </div>\n  )\n}\n\nexport default Main\n","import Header from './components/Header';\nimport Home from './components/Home';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n// import Projects from './components/pages/Projects';\n// import Blog from './components/pages/Blog';\n// import Notes from './components/pages/Notes';\n// import Post from './components/Post';\n// import Bookmarks from './components/pages/Bookmarks';\n\nimport './App.css';\n\nconst routes = [\n  { component: Home, path: '/', },\n  // { component: Projects, path: '/projects', },\n  // { component: Blog, path: '/blog', },\n  // // { component: Post, path: '/post/:id', },\n  // { component: Notes, path: '/notes', },\n  // { component: Bookmarks, path: '/bookmarks', }\n];\n\nfunction App() {\n\n\n  return (\n    <>\n      <Router>\n        <Header />\n        <Switch>\n          {routes.map((route, index) => {\n            return <Route key={index} path={route.path} exact component={route.component} />\n          })}\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}